<div class="contaniner text-center">
<div class="row justify-content-evenly">
{{#each productos}}
<div class="card col-6" style="width: 30rem; margin: 2rem">
  <div class="card-body">
    <h5 class="card-title">{{this.productId.title}}</h5>
    <h6 class="card-title">Cantidad actual: {{this.quantity}}</h6>
    <h6 class="card-title id" data-id="{{this.productId._id}}" hidden>{{this.productId._id}}</h6>
    <input class="form-control" id="_id" value="{{this.productId._id}}" hidden>
    <label for="quantity" class="form-label">Cantidad</label>
      <input type="number" class="form-control" id="quantity"  required>
    <button id="add-to-cart-btn" class="btn btn-primary" style="margin-top: 10px;">Agregar</button>
    <button id="delete-to-cart-btn" class="btn btn-danger" style="margin-top: 10px;">Sacar</button>
  </div>
</div>
{{/each}}
<h6>Total: ${{total}}</h6>
</div>
<button id="purchase" class="btn btn-warning" style="width: 100px; height: 70px; block:true">Confirmar Compra</button> 
</div>
<script>

const addToCartBtns = document.querySelectorAll('#add-to-cart-btn');
const deleteToCartBtns = document.querySelectorAll('#delete-to-cart-btn');
const purchaseBtns = document.querySelectorAll('#purchase');

addToCartBtns.forEach((btn, index) => {
  btn.addEventListener('click', async () => {
    const input = document.querySelectorAll('#quantity')[index];
    const quantity = parseInt(input.value);
    const inputId = document.querySelectorAll('#_id')[index];
    const id = inputId.value
    const cid = '{{cart}}'
    if (quantity >= 1) {
      try {
        const response = await fetch(`/api/carts/${cid}/products/${id}/${quantity}`, { method: 'PUT' });
        if (response.status === 200) {
          const result = await response.json();
          alert('Producto agregado al carrito:', result);
          location.reload();
          input.value = '';
        } else {
          alert('Error al agregar el producto al carrito');
          location.reload();
        }
      } catch (error) {
        alert('Error de conexi칩n al agregar el producto al carrito:', error);
        location.reload();

      }
    } else {
      alert('La cantidad no es v치lida');
      location.reload();
    }
  });
});


deleteToCartBtns.forEach((btn, index) => {
  btn.addEventListener('click', async () => {
    const input = document.querySelectorAll('#quantity')[index];
    const quantity = parseInt(input.value);
    const inputId = document.querySelectorAll('#_id')[index];
    const id = inputId.value
    const cid = '{{cart}}'
    if (quantity >= 1) {
      try {
        const response = await fetch(`/api/carts/${cid}/products/${id}/${quantity}`, { method: 'DELETE' });
        if (response.status === 200) {
          const result = await response.json();
          alert('Producto eliminado del carrito:', result);
          location.reload();
          input.value = '';
        } else {
          alert('Error al eliminar el producto del carrito');
          location.reload();

        }
      } catch (error) {
        alert('Error de conexi칩n al eliminar el producto del carrito:', error);
        location.reload();

      }
    } else {
      alert('La cantidad no es v치lida');
      location.reload();
    }
  });
});


purchaseBtns.forEach((btn, index) => {
  btn.addEventListener('click', async () => {
    const totalCompra = Number({{total}})
    if (totalCompra > 0) {
      try {
        const cid = '{{cart}}'
        const actionUrl = `http://localhost:8080/api/carts/${cid}/purchase`
        const response = await fetch(actionUrl, {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          }
        });
        if (response) {
          const jsonResponse = await response.json()
          console.log(jsonResponse.response)
          const ticketInfo = JSON.stringify(jsonResponse.response, null, 2)
          alert(`ticket: ${ticketInfo}`)
          alert('Carrito comprado exitosamente, se le enviara el ticket por mail')
          window.location.href = `http://localhost:8080`
        } else {
          alert('Error al comprar')
        }
      } catch (error) {
        alert('Error al comprar:', error)
      }
    } else {
      alert('El carrito esta vacio')
       window.location.href = 'http://localhost:8080/products'
    }
  });
});


</script>